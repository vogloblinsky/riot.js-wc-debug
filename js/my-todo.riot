<my-todo>
    <style>
        h1 {
            font-size: 100px;
            font-weight: 100;
            text-align: center;
            color: rgba(175, 47, 47, 0.15);
        }

        section {
            background: #fff;
            margin: 130px 0 40px 0;
            position: relative;
            box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2), 0 25px 50px 0 rgba(0, 0, 0, 0.1);
        }

        ul {
            margin: 0;
            padding: 0;
            list-style: none;
            border-top: 1px solid #e6e6e6;
        }
    </style>
    <h1>Todos Riot</h1>
    <section>
        <todo-input on-new-todo={onNewTodo}/>
        <ul>
            <todo-item
                each={todo in state.list}
                on-change={onChangeTodo}
                on-remove={onRemoveTodo}
                todo={todo}>
            </todo-item>
        </ul>
    </section>
    <script>
        export default {
            onBeforeMount(props, state) {
                state.list = [
                    { id: 0, text: 'my initial todo', checked: false },
                    { id: 1, text: 'Learn about Web Components', checked: true }
                ]
            },
            onMounted(props, state) {
                // right after the component is mounted on the page
                console.log(this.state)
            },
            onNewTodo(text) {
                this.update({
                    list: [
                        ...this.state.list,
                        { id: Date.now(), text, checked: false }
                    ]
                });
            },

            onChangeTodo(id, checked) {
                console.log(id, checked);
                const todo = this.state.list.find(e => e.id === id);

                todo.checked = checked;
                this.update();
            },

            onRemoveTodo(id) {
                const index = this.state.list.findIndex(e => e.id === id)
                console.log(id, index)
                this.update({
                    list : [
                        ...this.state.list.slice(0, index),
                        ...this.state.list.slice(index + 1)
                    ]
                });
            }
        }
    </script>
</my-todo>